# Generated by Django 5.2.3 on 2025-06-25 09:03

import core.models
import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='SQLFTProject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('project_name', models.CharField(max_length=255)),
                ('location', models.CharField(max_length=255)),
                ('google_map_link', models.URLField(blank=True, null=True)),
                ('description', models.TextField()),
                ('plot_type', models.CharField(max_length=100)),
                ('unit', models.CharField(choices=[('sqft', 'Square Feet'), ('sqyd', 'Square Yards')], max_length=10)),
                ('price', models.DecimalField(decimal_places=2, max_digits=12)),
                ('project_layout', models.FileField(blank=True, null=True, upload_to='project_layouts/')),
                ('project_image', models.ImageField(blank=True, null=True, upload_to='project_images/')),
                ('project_video', models.FileField(blank=True, null=True, upload_to='project_videos/')),
                ('land_document', models.FileField(blank=True, null=True, upload_to='land_documents/')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, unique=True)),
                ('mobile_number', models.CharField(blank=True, max_length=15, null=True, unique=True)),
                ('user_type', models.CharField(choices=[('client', 'Client Panel'), ('admin', 'Admin Panel'), ('b2b_vendor', 'B2B Business Panel'), ('real_estate_agent', 'Real Estate Agent Panel')], default='client', help_text="Defines the user's role and panel access.", max_length=20)),
                ('user_code', models.CharField(blank=True, max_length=10, null=True, unique=True)),
                ('referral_code', models.CharField(default=core.models.generate_referral_code, max_length=10, unique=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='customuser_set', related_query_name='customuser', to='auth.group', verbose_name='groups')),
                ('referred_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='referrals', to=settings.AUTH_USER_MODEL)),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='customuser_set', related_query_name='customuser', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='EcommerceProduct',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('stock_quantity', models.IntegerField(default=0)),
                ('category', models.CharField(blank=True, max_length=100, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('vendor', models.ForeignKey(limit_choices_to={'user_type': 'b2b_vendor'}, on_delete=django.db.models.deletion.CASCADE, related_name='products_sold', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_date', models.DateTimeField(auto_now_add=True)),
                ('total_amount', models.DecimalField(decimal_places=2, max_digits=15)),
                ('status', models.CharField(default='pending', max_length=50)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='my_orders', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='OrderItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField()),
                ('price_at_purchase', models.DecimalField(decimal_places=2, max_digits=10)),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='core.order')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.ecommerceproduct')),
            ],
        ),
        migrations.CreateModel(
            name='OTPVerification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('otp_code', models.CharField(max_length=6)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('expires_at', models.DateTimeField()),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='PlotListing',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('location', models.CharField(max_length=255)),
                ('total_area_sqft', models.DecimalField(decimal_places=2, max_digits=10)),
                ('price_per_sqft', models.DecimalField(decimal_places=2, max_digits=10)),
                ('is_available_full', models.BooleanField(default=True)),
                ('available_sqft_for_investment', models.DecimalField(decimal_places=2, default=0.0, help_text="Remaining square feet available for 'Book a Square Feet' investments.", max_digits=10)),
                ('is_verified', models.BooleanField(default=False, help_text="Set by Admin for 'Greenheap Verified Plots'.")),
                ('plot_file', models.FileField(blank=True, null=True, upload_to='plot_files/')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('listed_by_agent', models.ForeignKey(blank=True, help_text='Real Estate Agent who listed this plot on behalf of the owner.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='plots_listed_as_agent', to=settings.AUTH_USER_MODEL)),
                ('owner', models.ForeignKey(help_text='Primary owner of the plot.', on_delete=django.db.models.deletion.CASCADE, related_name='listed_plots', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='PlotInquiry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lead_name', models.CharField(max_length=255)),
                ('contact', models.CharField(max_length=50)),
                ('inquiry', models.TextField()),
                ('status', models.CharField(choices=[('new', 'New'), ('contacted', 'Contacted'), ('interested', 'Interested'), ('not_interested', 'Not Interested'), ('closed', 'Closed')], default='new', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('plot', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='inquiries', to='core.plotlisting')),
            ],
        ),
        migrations.CreateModel(
            name='Booking',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('booking_type', models.CharField(choices=[('full_plot', 'Full Plot'), ('square_feet', 'Square Feet')], max_length=20)),
                ('booked_area_sqft', models.DecimalField(blank=True, decimal_places=2, help_text="Area in sqft if booking type is 'square_feet'.", max_digits=10, null=True)),
                ('total_price', models.DecimalField(decimal_places=2, max_digits=15)),
                ('booking_date', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(default='pending', max_length=50)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='my_bookings', to=settings.AUTH_USER_MODEL)),
                ('plot_listing', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bookings', to='core.plotlisting')),
            ],
        ),
        migrations.CreateModel(
            name='RealEstateAgentProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(blank=True, max_length=100, null=True)),
                ('gender', models.CharField(blank=True, max_length=20, null=True)),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('company_name', models.CharField(max_length=255)),
                ('phone_number', models.CharField(max_length=20)),
                ('company_number', models.CharField(blank=True, max_length=20, null=True)),
                ('email', models.EmailField(max_length=254)),
                ('address', models.TextField(blank=True, null=True)),
                ('city', models.CharField(blank=True, max_length=100, null=True)),
                ('state', models.CharField(blank=True, max_length=100, null=True)),
                ('country', models.CharField(blank=True, max_length=100, null=True)),
                ('kyc_documents', models.FileField(blank=True, null=True, upload_to='kyc_documents/')),
                ('gst_number', models.CharField(blank=True, max_length=50, null=True)),
                ('license_number', models.CharField(blank=True, max_length=100, null=True, unique=True)),
                ('commission_rate', models.DecimalField(decimal_places=2, default=0.0, help_text='Commission rate for listings (e.g., 2.50 for 2.5%)', max_digits=5)),
                ('user', models.OneToOneField(limit_choices_to={'user_type': 'real_estate_agent'}, on_delete=django.db.models.deletion.CASCADE, related_name='agent_profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ReferralCommission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('level', models.PositiveSmallIntegerField()),
                ('commission_percent', models.DecimalField(decimal_places=2, max_digits=4)),
                ('status', models.CharField(choices=[('Active', 'Active'), ('Pending', 'Pending'), ('Inactive', 'Inactive')], max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('referred_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='given_commissions', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='earned_commissions', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='JointOwner',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('share_percentage', models.DecimalField(decimal_places=2, help_text='Percentage of ownership share (e.g., 50.00)', max_digits=5)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='jointly_owned_plots', to=settings.AUTH_USER_MODEL)),
                ('plot_listing', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='joint_owners', to='core.plotlisting')),
            ],
            options={
                'unique_together': {('plot_listing', 'owner')},
            },
        ),
    ]
